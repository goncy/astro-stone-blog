---
import { ViewTransitions } from 'astro:transitions';

import Footer from './Footer.astro';
import Header from './Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE, SITE_HEADER } from '../../constants';

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  image = SITE_HEADER
} = Astro.props;
---

<!doctype html>
<html lang="es" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />

    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <!-- Transitions -->
    <ViewTransitions />

    <!-- Alpine -->
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <script>
      import Alpine from 'alpinejs';

      Alpine.store('theme', {
        init() {
          this.isDark = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
              return localStorage.getItem('theme') === 'dark';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
              return true;
            }
            return false;
          })();
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;

          localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>
  </head>
  <body
    class="bg-primary-50 text-primary-950 antialiased transition dark:bg-primary-950 dark:text-primary-200"
  >
    <Header />
    <main class="mx-auto max-w-2xl px-6 lg:max-w-7xl">
      <slot />
    </main>
    <Footer />
  </body>
</html>
